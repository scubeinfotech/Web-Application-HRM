version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: hrm-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: hrm_system
      POSTGRES_USER: hrm_user
      POSTGRES_PASSWORD: hrm_secure_password_2024
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - hrm-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U hrm_user -d hrm_system"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: hrm-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass redis_secure_password_2024
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - hrm-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # HRM Application
  hrm-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: hrm-app
    restart: unless-stopped
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://hrm_user:hrm_secure_password_2024@postgres:5432/hrm_system
      REDIS_URL: redis://:redis_secure_password_2024@redis:6379
      JWT_SECRET: your-super-secure-jwt-secret-key-for-production-2024
      NEXTAUTH_SECRET: your-nextauth-secret-for-production-2024
      NEXTAUTH_URL: http://localhost:3000
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - hrm-network
    volumes:
      - ./uploads:/app/uploads
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: hrm-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - hrm-app
    networks:
      - hrm-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  hrm-network:
    driver: bridge